import React, { useState, useEffect } from 'react';
import { getSnapshots } from '../../api/snapshot';
import type { Snapshot } from '../../api/snapshot';
import { exportApi } from '../../api/export';
import { DownloadIcon } from '../../icons';

// –°—Ç–µ–π—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –∫–Ω–æ–ø–∫–∏
type ExportStatus = {
    [snapshotId: number]: {
        loading: boolean;
        message: string;
        isError: boolean;
    }
};

export const ReportsView: React.FC = () => {
    const [snapshots, setSnapshots] = useState<Snapshot[]>([]);
    const [viewError, setViewError] = useState<string | null>(null);
    const [status, setStatus] = useState<ExportStatus>({});

    // 1. –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–Ω—ç–ø—à–æ—Ç—ã –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—è APIResult
    useEffect(() => {
        getSnapshots()
            .then(result => {
                if (result.success) {
                    setSnapshots(result.data || []);
                } else {
                    console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–Ω—ç–ø—à–æ—Ç–æ–≤:", result.error);
                    setViewError(result.error || '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å–Ω—ç–ø—à–æ—Ç–æ–≤.');
                }
            })
            .catch(err => {
                console.error("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–Ω—ç–ø—à–æ—Ç–æ–≤:", err);
                setViewError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å–Ω—ç–ø—à–æ—Ç–æ–≤.');
            });
    }, []);

    // 2. –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–°–∫–∞—á–∞—Ç—å"
    const handleExport = async (snapshotId: number) => {
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å "–∑–∞–≥—Ä—É–∑–∫–∞"
        setStatus(prev => ({
            ...prev,
            [snapshotId]: { loading: true, message: '–°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞...', isError: false }
        }));

        try {
            // –í—ã–∑—ã–≤–∞–µ–º "–ø–ª–æ—Å–∫–∏–π" —ç–∫—Å–ø–æ—Ä—Ç
            const result = await exportApi.flatReport(snapshotId);

            if (result.success) {
                // –£—Å–ø–µ—Ö
                setStatus(prev => ({
                    ...prev,
                    [snapshotId]: { loading: false, message: `‚úÖ –ì–æ—Ç–æ–≤–æ: ${result.path}`, isError: false }
                }));
            } else {
                // –û—à–∏–±–∫–∞ –∏–ª–∏ –æ—Ç–º–µ–Ω–∞
                const errorMsg = result.message === 'Export cancelled.'
                    ? '–û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.'
                    : `üö´ –û—à–∏–±–∫–∞: ${result.message}`;
                setStatus(prev => ({
                    ...prev,
                    [snapshotId]: { loading: false, message: errorMsg, isError: true }
                }));
            }
        } catch (err) {
            // –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞
            setStatus(prev => ({
                ...prev,
                [snapshotId]: { loading: false, message: `üö´ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${(err as Error).message}`, isError: true }
            }));
        }
    };

    // 3. –†–µ–Ω–¥–µ—Ä –≤ —Å—Ç–∏–ª–µ Tailwind
    return (
        <div className="p-4 bg-gray-800 text-white flex-1 overflow-auto">
            <h2 className="text-2xl font-semibold mb-4 text-gray-100">–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –û—Ç—á–µ—Ç–æ–≤</h2>

            {viewError && (
                <div className="bg-red-800 border border-red-600 text-red-100 px-4 py-3 rounded-lg mb-4">
                    {viewError}
                </div>
            )}

            {snapshots.length === 0 && !viewError && (
                <p className="text-gray-400">–°–Ω—ç–ø—à–æ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –ª–æ–≥–∏ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã.</p>
            )}

            <ul className="space-y-4">
                {snapshots.map(snap => {
                    const currentStatus = status[snap.id];

                    return (
                        <li key={snap.id} className="bg-gray-900 p-4 rounded-lg shadow-md border border-gray-700">
                            <div className="flex justify-between items-center">
                                {/* –ò–Ω—Ñ–æ –æ —Å–Ω—ç–ø—à–æ—Ç–µ */}
                                <div>
                                    <div className="font-bold text-lg text-white">–°–Ω—ç–ø—à–æ—Ç ID: {snap.id}</div>
                                    <div className="text-sm text-gray-400">
                                        {new Date(snap.created_at).toLocaleString()}
                                    </div>
                                    <div className="text-sm text-gray-300 mt-1">
                                        {snap.description || '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}
                                    </div>
                                </div>

                                {/* –ö–Ω–æ–ø–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ */}
                                <button
                                    onClick={() => handleExport(snap.id)}
                                    disabled={currentStatus?.loading}
                                    className="flex items-center justify-center px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50 disabled:cursor-wait transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500"
                                >
                                    {currentStatus?.loading ? (
                                        <div className="w-5 h-5 mr-2 border-t-2 border-b-2 border-white rounded-full animate-spin"></div>
                                    ) : (
                                        <DownloadIcon className="w-5 h-5 mr-2" />
                                    )}
                                    {currentStatus?.loading ? '–í –ø—Ä–æ—Ü–µ—Å—Å–µ...' : '–°–∫–∞—á–∞—Ç—å –æ—Ç—á–µ—Ç'}
                                </button>
                            </div>

                            {/* –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ (–ø–æ–¥ –∫–Ω–æ–ø–∫–æ–π) */}
                            {currentStatus?.message && (
                                <p className={`mt-3 text-sm ${currentStatus.isError ? 'text-red-400' : 'text-green-400'}`}>
                                    {currentStatus.message}
                                </p>
                            )}
                        </li>
                    );
                })}
            </ul>
        </div>
    );
};
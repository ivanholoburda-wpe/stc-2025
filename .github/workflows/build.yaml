on:
  push:
    branches:
      - main
      - feature/ci/cd-pipeline
  pull_request:
    branches:
      - main
      - feature/ci/cd-pipeline

permissions:
  contents: write

jobs:
  build-linux-portable:
    name: Build portable Linux artifact
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install OS build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 pkg-config libsqlite3-dev build-essential

      - name: Install npm dependencies
        run: npm ci

      - name: Rebuild sqlite3 for Electron
        run: |
          npm install --no-save electron-rebuild@3
          npx electron-rebuild -f -w sqlite3

      - name: Build portable artifact
        env:
          CI: true
        run: npm run build:portable

      - name: List produced files
        run: |
          find portable || echo "No portable output"
          find dist || echo "No dist output"
          find out || echo "No out output"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            portable/**
            dist/**
            out/**

  release:
    name: Create GitHub Release (only on push to main)
    needs: build-linux-portable
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: release_files

      - name: List release_files
        run: find release_files || echo "no release files"

      - name: Create GitHub release and upload assets
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ github.run_number }}
          files: release_files/**

on:
  push:
    branches:
      - feature/ci/cd-pipeline
  pull_request:
    branches:
      - feature/ci/cd-pipeline

permissions:
  contents: write

jobs:
  build:
    name: Build & Package (Windows)
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Windows SDK manually
        run: |
          choco install windows-sdk-10.1 --verison=10.0.19041.0 -y
        shell: pwsh

      - name: Setup Visual Studio Build Tools
        uses: microsoft/setup-msbuild@v2

      - name: Set node-gyp version
        shell: pwsh
        run: |
          echo "GYP_MSVS_VERSION=2022" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "npm_config_msvs_version=2022" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Install dependencies
        run: npm ci

      - name: Rebuild sqlite3 for Electron
        shell: pwsh
        env:
          npm_config_disturl: "https://electronjs.org/headers"
          npm_config_runtime: "electron"
        run: |
          $ev = node -p "require('./node_modules/electron/package.json').version"
          Write-Host "Detected electron version: $ev"
          npm install --no-save --no-audit electron-rebuild@3
          npx electron-rebuild -v $ev -f -w sqlite3

      - name: Build (TypeScript / app)
        shell: pwsh
        run: |
          $hasBuild = node -e "try { console.log(Boolean(require('./package.json').scripts && require('./package.json').scripts.build)); } catch (e) { console.log(false); }"
          if ($hasBuild -eq 'true') { npm run build } else { Write-Host "No build script defined" }

      - name: Package Windows EXE
        env:
          CI: true
        run: npm run pack:win

      - name: List dist output
        run: dir /s /b dist || echo "dist folder not found"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            dist/**
            out/**

  release:
    name: Create GitHub Release (only on push to main)
    needs: build
    runs-on: windows-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: release_files

      - name: List release_files
        run: dir /s /b release_files || echo "no release files"

      - name: Create GitHub release and upload assets
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ github.run_number }}
          files: release_files/**
